// Place your key bindings in this file to override the defaults
[
  // ================== Navigation ==================
  {
    "command": "workbench.action.navigateLeft",
    "key": "ctrl-h"
  },
  {
    "command": "workbench.action.navigateDown",
    "key": "ctrl-j"
  },
  {
    "command": "workbench.action.navigateUp",
    "key": "ctrl-k"
  },
  {
    "command": "workbench.action.navigateRight",
    "key": "ctrl-l"
  },
  // ================== Toggle Sidebar ==================
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.files.action.focusFilesExplorer"
      ]
    },
    "command": "runCommands",
    "key": "tab",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "command": "runCommands",
    "key": "tab",
    "when": "sideBarFocus && !inputFocus"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "tab",
    "when": "vim.mode == 'Normal' && editorTextFocus && foldersViewVisible"
  },

  //Dont forget to tell bros about gt-nextEditor and gT-previousEditor
  {
    "args": {
      "after": ["$"]
    },
    "command": "vim.remap",
    "key": "shift+4",
    "when": "editorTextFocus && (vim.mode == 'Normal' || vim.mode == 'Visual')"
  },
  {
    "command": "editor.action.moveLinesDownAction",
    "key": "shift+j",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "editor.action.moveLinesUpAction",
    "key": "shift+k",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "editor.action.addSelectionToNextFindMatch",
    "key": "ctrl-n",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  // ================== File Explorer ==================
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "x",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFolder",
    "key": "shift-a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "explorer.openAndPassFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.toggleExpand",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  },
  // ================== Find in Files ==================
  {
    "command": "workbench.action.quickOpenNavigateNext",
    "key": "ctrl+j",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigatePrevious",
    "key": "ctrl+k",
    "when": "inQuickOpen"
  },
  // ================== Suggestion Widget ==================
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+j",
    "when": "suggestWidgetVisible"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+k",
    "when": "suggestWidgetVisible"
  },
  {
    "command": "acceptSelectedSuggestion",
    "key": "ctrl+l",
    "when": "suggestWidgetVisible"
  },
  // ================== Quick Open Widget ==================
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.acceptSelectedQuickOpenItem",
    "when": "inQuickOpen"
  },
  // ================== Emmet Widget ==================
  {
    "command": "editor.emmet.action.incrementNumberByOne",
    "key": "ctrl+a",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.emmet.action.decrementNumberByOne",
    "key": "ctrl+x",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },

  // ================== Random ==================
  {
    "command": "-editor.action.selectFromAnchorToCursor",
    "key": "cmd+k cmd+k",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "command": "-editor.action.defineKeybinding",
    "key": "cmd+k cmd+k",
    "when": "resource == 'vscode-userdata:/Users/ethereum/Library/Application%20Support/Code/User/keybindings.json'"
  }
]
 
