[
  // ================== Navigation ==================
  {
    "key": "ctrl-h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl-l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl-k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl-j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "tab",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.files.action.focusFilesExplorer"
      ]
    },
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus"
  },
  {
    "key": "tab",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "when": "sideBarFocus && !inputFocus"
  },
  {
    "key": "tab",
    "when": "vim.mode == 'Normal' && editorTextFocus && foldersViewVisible",
    "command": "workbench.action.toggleSidebarVisibility"
  },

  //Dont forget to tell bros about gt-nextEditor and gT-previousEditor

  {
    "key": "shift+4",
    "command": "vim.remap",
    "args": {
      "after": ["$"]
    },
    "when": "editorTextFocus && (vim.mode == 'Normal' || vim.mode == 'Visual')"
  },
  // ================== Save and Quit ==================
  {
    "key": "space w",
    "command": "saveAll",
    "when": "vim.mode == 'Normal' && editorTextFocus || !inputFocus"
  },
  // {
  //   "key": "space q q",
  //   "command": "workbench.action.quit",
  //   "when": "vim.mode == 'Normal' && editorTextFocus"
  // },

  // ================== Toggle Panels ==================
  {
    "key": "space l",
    "command": "workbench.action.togglePanel",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space t",
    "command": "workbench.action.toggleAuxiliaryBar",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space s",
    "command": "workbench.action.splitEditorDown",
    "when": "vim.mode == 'Normal' && editorTextFocus || !inputFocus"
  },
  {
    "key": "space v",
    "command": "workbench.action.splitEditorRight",
    "when": "vim.mode == 'Normal' && editorTextFocus || !inputFocus"
  },
  {
    "key": "space q",
    "command": "workbench.action.closeActiveEditor",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },

  // ================== Coding Shortcuts ==================
  {
    "key": "shift+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "shift+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space g h",
    "command": "editor.action.showHover",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space g a",
    "command": "editor.action.codeAction",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space c r",
    "command": "editor.action.rename",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space g s",
    "command": "workbench.action.gotoSymbol",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space g d",
    "command": "editor.action.revealDefinition",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space g r",
    "command": "editor.action.goToReferences",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space g g",
    "command": "runCommands",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)",
    "args": {
      "commands": ["workbench.view.scm", "workbench.scm.focus"]
    }
  },
  {
    "key": "ctrl-n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },

  // ================== File Explorer ==================
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift-a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // {
  //   "key": "enter",
  //   "command": "explorer.openAndPassFocus",
  //   "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  // },
  // {
  //   "key": "enter",
  //   "command": "list.toggleExpand",
  //   "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  // },

  // ================== Highlighting ==================

  // ================== Find in Files ==================
  {
    "key": "space space",
    "command": "workbench.action.quickOpen",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "space f t",
    "command": "workbench.action.showAllEditors",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space f w",
    "command": "vim.remap",
    "args": {
      "after": ["/"]
    },
    "when": "editorTextFocus && vim.mode == 'Normal' || !inputFocus"
  },
  {
    "key": "space f c",
    "command": "workbench.action.showCommands",
    "when": "vim.mode == 'Normal' && editorTextFocus || !inputFocus"
  },
  {
    "key": "space f g",
    "command": "workbench.action.findInFiles",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  // ================== Suggestion Widget ==================
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+l",
    "command": "acceptSelectedSuggestion",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+a",
    "command": "editor.emmet.action.incrementNumberByOne",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "ctrl+x",
    "command": "editor.emmet.action.decrementNumberByOne",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  // ================== Zen Mode Widget ==================
  {
    "key": "space z m",
    "command": "workbench.action.toggleZenMode",
    "when": "vim.mode == 'Normal' && editorTextFocus || !inputFocus"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "-editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "-editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/Users/ethereum/Library/Application%20Support/Code/User/keybindings.json'"
  }
]
